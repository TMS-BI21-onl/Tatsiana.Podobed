HomeWork 2

1.	Решите на базе данных AdventureWorks2017 следующие задачи:
a)	Извлечь все столбцы из таблицы Sales.SalesTerritory.
SELECT *
FROM Sales.SalesTerritory

b)	Извлечь столбцы TerritoryID и Name из таблицы Sales.SalesTerritory.
SELECT st.TerritoryID
      ,st.Name
FROM Sales.SalesTerritory st

c)	Найдите все данные, которые существует для людей из Person.Person с LastName = ‘Norman’.
SELECT *
FROM Person.Person pp
WHERE pp.LastName = 'Norman';

d)	Найдите все строки из Person.Person, где EmailPromotion не равен 2.
SELECT *
FROM Person.Person pp
WHERE pp.EmailPromotion != 2;

3.	На официальном сайте Microsoft (https://docs.microsoft.com/ru-ru/sql/t-sql/functions/aggregate-functions-transact-sql?view=sql-server-ver15) ещё раз просмотрите синтаксис SUM, AVG, COUNT, MIN, MAX и примеры для каждой функции. 
Какие ещё агрегатные функции существуют в языке T-SQL? Приведите несколько примеров.
•	APPROX_COUNT_DISTINCT
•	CHECKSUM_AGG
•	COUNT_BIG
•	GROUPING
•	GROUPING_ID
•	STDEV
•	STDEVP
•	STRING_AGG
•	VAR
•	VARP

•	STDEV
SELECT STDEV(DISTINCT sp.SalesQuota) AS Distinct_Values
      ,STDEV(sp.SalesQuota) AS All_Values  
FROM Sales.SalesPerson sp;
Первый столбец содержит стандартное отклонение всех уникальных значений, а второй — стандартное отклонение всех значений, включая повторяющиеся.

•	CHECKSUM_AGG
SELECT CHECKSUM_AGG(CAST(sp.SalesQuota as int))
FROM Sales.SalesPerson sp;
Эта функция возвращает контрольную сумму значений в группе. Значения NULL функция CHECKSUM_AGG не учитывает.

4.	Решите на базе данных AdventureWorks2017 следующие задачи:
a)	Сколько уникальных PersonType существует для людей из Person.Person с LastName начинающиеся с буквы М или не содержащий 1 в EmailPromotion.
SELECT COUNT(DISTINCT pp.PersonType)
FROM Person.Person pp
WHERE pp.LastName LIKE ('M%') OR pp.EmailPromotion != 1;

b)	Вывести первых 3 специальных предложений из Sales.SpecialOffer с наибольшими DiscountPct, которые начинали действовать с 2013-01-01 по 2014-01-01.
SELECT TOP 3 *
FROM Sales.SpecialOffer so
WHERE so.StartDate BETWEEN '2013-01-01' AND '2014-01-01'
ORDER BY so.DiscountPct DESC;

c)	Найти самый минимальный вес и самый максимальный размер продукта из Production.Product.
SELECT MIN(pp.Weight) AS MinWeight
      ,MAX(pp.Size) AS MaxSize
FROM Production.Product pp;

d)	Найти самый минимальный вес и самый максимальный размер продукта для каждой подкатегории ProductSubcategoryID из Production.Product. 
SELECT pp.ProductSubcategoryID
      ,MIN(pp.Weight) AS MinWeight
      ,MAX(pp.Size) AS MaxSize
FROM Production.Product pp
WHERE pp.ProductSubcategoryID IS NOT NULL
GROUP BY pp.ProductSubcategoryID;

e)	Найти самый минимальный вес и самый максимальный размер продукта для каждой подкатегории ProductSubcategoryID из Production.Product, где цвет продукта определен(Color).
SELECT pp.ProductSubcategoryID
      ,MIN(pp.Weight) AS MinWeight
      ,MAX(pp.Size) AS MaxSize
FROM Production.Product pp
WHERE pp.ProductSubcategoryID IS NOT NULL AND pp.Color IS NOT NULL
GROUP BY pp.ProductSubcategoryID;
